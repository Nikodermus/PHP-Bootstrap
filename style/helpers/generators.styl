@require "./mixins"
@require "./variables"

rupture.scale = 0 screen-md screen-lg screen-xl screen-xxl
rupture.scale-names = "" "sm" "md" "lg" "xl"
rupture.enable-em-breakpoints = true
rupture.base-font-size = size px

// Generate color-related classes
for color, value in colors
    {".font-color-" + color}
        color: value !important
        color: "var(--%s) !important" % unquote(color)

        *
            color: inherit !important

    {".bg-" + color}
        background: value
        background: "var(--%s)" % unquote(color)

        +disabled(value)
            cursor: not-allowed

    {".border-" + color}
        border-color: value
        border-color: "var(--%s)" % unquote(color)
        border-style: solid
        border-width: 1px

    {".button-" + color}
        background: value
        background: "var(--%s)" % unquote(color)
        border-radius: rem(radius-sm)
        overflow: hidden
        width: 100%

        +disabled(value)
            cursor: not-allowed

        &:hover
            if (light(value))
                background: darken(value, 20%)
            else
                background: lighten(value, 20%)

    :root
        {"--" + color}: value

/* Responsive classes */
for breakpoint in 0...5
    +above(rupture.scale-names[breakpoint])
        // Font sizes
        for font in font-weights
            {"." + breakpoints[breakpoint] + "font-weight-" + font}
                font-weight: font

                *
                    font-weight: inherit

        /* Classes with direction and size */
        for space-name, spacing in spaces
            for side in sides
                // Margin classes
                {"." + name + "margin" + side + space-name}
                    {"margin" + side}: rem(spacing)

                // Padding classes
                {"." + name + "padding" + side + space-name}
                    {"padding" + side}: rem(spacing)

        // Font Weight
        for font in font-sizes
            {"." + name + "font-size-" + font}
                font-size: rem(font) i

                *
                    font-size: inherit

        /* Classes with direction only */
        for side in sides
            // Margin collapse
            {"." + name + "margin" + side + "-collapse"}
                {"margin" + side}: 0

            {"." + name + "margin" + side + "-unset"}
                {"margin" + side}: unset

            {"." + name + "margin" + side + "-auto"}
                {"margin" + side}: auto

            // Padding collapse
            {"." + name + "padding" + side + "-collapse"}
                {"padding" + side}: 0

            {"." + name + "padding" + side + "-unset"}
                {"padding" + side}: unset

            {"." + name + "padding" + side + "-auto"}
                {"padding" + side}: auto

            // Border collapse
            {"." + name + "border" + side + "-collapse"}
                {"border" + side}: 0

            {"." + name + "border" + side + "-unset"}
                {"border" + side}: unset

            {"." + name + "border" + side + "-auto"}
                {"border" + side}: auto

            /* Classes with color and direction */
            for color, value in colors
                {".border" + side + "-" + color}
                    {"border" + side + "-style"}: solid
                    {"border" + side + "-width"}: 1px
                    {"border" + side + "-color"}: value
                    {"border" + side + "-color"}: "var(--%s)" % unquote(color)

            {".border" + side + "-collapse"}
                {"border" + side}: 0

            {".border" + side + "-unset"}
                {"border" + side}: unset

        /* Classes with direction no dashes and size */
        for space-name, spacing in spaces
            for side in sides-no-dashes
                // Top, bottom, left, right
                {"." + name + side + space-name}
                    {side}: rem(spacing)

        /* Classes with size only */
        for space-name, spacing in spaces
            // Margin sides
            {"." + name + "margin-horizontal" + space-name}
                margin-left: rem(spacing)
                margin-right: rem(spacing)

            {"." + name + "margin-vertical" + space-name}
                margin-bottom: rem(spacing)
                margin-top: rem(spacing)

            // Padding sides
            {"." + name + "padding-horizontal" + space-name}
                padding-left: rem(spacing)
                padding-right: rem(spacing)

            {"." + name + "padding-vertical" + space-name}
                padding-bottom: rem(spacing)
                padding-top: rem(spacing)

        for border-name, border-size in border-radius-sizes
            {"." + name + "border-radius" + border-name}
                border-radius: rem(border-size)

        /* Other helpers */
        {"." + name + "margin-vertical-collapse"}
            margin-bottom: 0
            margin-top: 0

        {"." + name + "margin-horizontal-collapse"}
            margin-left: 0
            margin-right: 0

        {"." + name + "padding-horizontal-collapse"}
            padding-left: 0
            padding-right: 0

        {"." + name + "padding-vertical-collapse"}
            padding-bottom: 0
            padding-top: 0

        {"." + name + "margin-vertical-unset"}
            margin-bottom: unset
            margin-top: unset

        {"." + name + "margin-horizontal-unset"}
            margin-left: unset
            margin-right: unset

        {"." + name + "padding-horizontal-unset"}
            padding-left: unset
            padding-right: unset

        {"." + name + "padding-vertical-unset"}
            padding-bottom: unset
            padding-top: unset

        {"." + name + "margin-vertical-auto"}
            margin-bottom: auto
            margin-top: auto

        {"." + name + "margin-horizontal-auto"}
            margin-left: auto
            margin-right: auto

        {"." + name + "padding-horizontal-auto"}
            padding-left: auto
            padding-right: auto

        {"." + name + "padding-vertical-auto"}
            padding-bottom: auto
            padding-top: auto

        {"." + name + "border-radius-collapse"}
            border-radius: 0

        {"." + name + "border-radius-unset"}
            border-radius: unset

/* Responsive classes end */
